install.packages("swirl")
library("swirl")
swirl()
5+4
5+7
x <- 4 + 8
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
play()
?c
nxt()
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt = sqrt(z - 1)
my_sqrt<-sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
play()
dir()
?list.files
?dir()
?dir
nxt()
?list.files
args(list.files)
play()
args(list.files())
nxt()
old.dir <- getwd()
dir.create(testdir)
testdir <- dir.create()
?dir.create
testdir <- dir.create(getwd())
info()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create('mytest.R')
ls()
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info('mytest.R')
?file.rename
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path(folder1,folder2)
file.path('folder1','folder2')
?dir.create
dir.create('testdir2',recursive=FALSE,file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'), recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd()
setwd(old.dir)
unlink(testdir,recursive=TRUE)
unlink('testdir',recursive=TRUE)
1:20
play()
1:10;3:5
nxt()
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length(30))
my_seq <- seq(5, 10, length=30)
length(my_seq)
my_seq
nxt()
1:length(my_seq)
seq(alongwith = my_seq)
seq(along.with = my_seq)
play()
?along.with
?seq
nxt()
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2),time=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect = c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Lily")
my_name = c(my_char, "Lily")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c('X','Y','Z'),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[3,5,7]
x[3;5;7]
c(x)
c(x[1:10])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 = matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c('Bill','Gina','Kelly','Sean')
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames = c('patient','age','weight','bp','rating','test')
cnames <- c('patient','age','weight','bp','rating','test')
my_matrix.colnames -> colnames(cnames)
colnames(my_matrix) <- cnames
colnames(my_matrix) <- cnames
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5!=7
NOT(5=7)
!(5=7)
!5=7
!(5==7)
FALSE & FALSE
true %c(true,false,FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE |
| c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(c(ints > 7))
which(ints > 7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
swirl()
library("swirl")
swirl()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(stdev,c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("Hello world")
telegram("Hello world")
submit()
submit()
submit()
submit()
mad_libs("Cambridge","imprudent","kinkajou")
submit()
'I'%p'love'%p'R!'
'I' %p 'love' %p 'R!'
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <-
flags[,11:17]
play()
?head
nxt()
head(flag_colors,6)
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags(, 19:23)
flag_shapes <- flags[], 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
lapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(platns)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 = rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = .7)
?rbinom
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean = 10)
?rpois
rpois(5, 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
?colMeans
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
play()
Sys.time()
nxt()
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars4dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
clc
Batch_2457207_batch_results <- read.csv("~/Downloads/Batch_2457207_batch_results.csv", header=FALSE)
View(Batch_2457207_batch_results)
Batch_2457207_batch_results$"Worker 1"
Batch_2457207_batch_results$V2
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
?read.csv
mydf <- read.csv(path2csv, FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
play()
rm("flag_shapes")
rm("flags")
rm("flag_colors","mtcars")
rm("my_matrix","my_pois","my_vector",'my_data')
rm('plants','shape_mat')
rm('cars','my_matrix2')
rm('my_na')
nxt()
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, r_arch:country)
select(cran, country:rarch
pwd
wd
getwd()
cd Desktop/EvLab
cd /Desktop/EvLab
?c
?Cd
?cd
setwd Desktop
setwd(Desktop)
?setwd
list.files
list.files()
setwd("Desktop")
setwd("EvLab")
list.files()
setwd("GitHub stuff")
list.files()
setwd("AgentPatientStimuli/")
setwd("Experiment/")
setwd("images/stills/")
getwd()
parent <- getwd()
getwd()
getwd() <- parent
parent <- getwd()
getwd()
